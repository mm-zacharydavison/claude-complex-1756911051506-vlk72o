{
  "records": [
    {
      "filePath": "src/UserService.ts",
      "toolName": "Edit",
      "sessionId": "e2e-test-session-1756911055400",
      "timestamp": 1756911055434,
      "gitPatchHunks": [
        [
          "@@ -1,1 +1,2 @@",
          " import { isValidName } from './validation';",
          "+import { config } from './config';"
        ],
        [
          "@@ -1,2 +2,8 @@",
          " import { isValidName } from './validation';",
          " ",
          "+interface User {",
          "+  id: string;",
          "+  name: string;",
          "+  created: Date;",
          "+}",
          "+"
        ],
        [
          "@@ -1,4 +8,4 @@",
          " import { isValidName } from './validation';",
          " ",
          " export class UserService {",
          "-  private users: Map<string, any> = new Map();",
          "+  private users: Map<string, User> = new Map();"
        ],
        [
          "@@ -4,5 +11,5 @@",
          "   private users: Map<string, any> = new Map();",
          "   ",
          "   create(name: string): string {",
          "-    if (!isValidName(name)) {",
          "-      throw new Error('Invalid name');",
          "+    if (this.users.size >= config.maxUsers) {",
          "+      throw new Error('User limit reached');"
        ],
        [
          "@@ -7,3 +14,7 @@",
          "     if (!isValidName(name)) {",
          "       throw new Error('Invalid name');",
          "     }",
          "+    if (!isValidName(name)) {",
          "+      throw new Error('Invalid name');",
          "+    }",
          "+    "
        ],
        [
          "@@ -8,4 +19,5 @@",
          "       throw new Error('Invalid name');",
          "     }",
          "     const id = Math.random().toString(36);",
          "-    this.users.set(id, { id, name, created: new Date() });",
          "+    const user: User = { id, name, created: new Date() };",
          "+    this.users.set(id, user);"
        ],
        [
          "@@ -12,4 +24,4 @@",
          "     return id;",
          "   }",
          "   ",
          "-  get(id: string): any {",
          "+  get(id: string): User | undefined {"
        ],
        [
          "@@ -16,5 +28,5 @@",
          "     return this.users.get(id);",
          "   }",
          "   ",
          "-  delete(id: string): boolean {",
          "-    return this.users.delete(id);",
          "+  getAll(): User[] {",
          "+    return Array.from(this.users.values());"
        ],
        [
          "@@ -19,3 +31,7 @@",
          "   delete(id: string): boolean {",
          "     return this.users.delete(id);",
          "   }",
          "+  ",
          "+  clear(): void {",
          "+    this.users.clear();",
          "+  }"
        ]
      ]
    }
  ]
}